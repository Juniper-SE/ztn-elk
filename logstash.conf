input {
  udp {
		port => 5550
		type => "syslog"
	}

}


filter {
### Juniper syslogs + traffic logs ###
  if [message] =~ 'junos' {
    # Juniper SRX traffic logs
    if [message] =~ "RT_FLOW" {
        grok {
           match => {
                "message" => "<%{NUMBER:priority_code}>%{NUMBER:version} %{TIMESTAMP_ISO8601:syslog_timestamp} %{HOSTNAME:hostname} %{WORD:process} - %{WORD:processID} \[%{DATA:platform} %{DATA:kv_pairs}\](%{GREEDYDATA:message})?"
           }
        }

        kv {
            source => "kv_pairs"
            value_split => "="
            field_split => " "
            trim_key => "\""
            trim_value => "\""
        }

   } else {
        grok {
           match => {
                "message" => "<%{NUMBER:priority_code}>%{NUMBER:version} (%{TIMESTAMP_ISO8601:timestamp}|%{DATA:TIMESTAMP}) %{HOSTNAME:hostname} %{WORD:process} (- )?%{WORD:processID} %{DATA:syslog_tag} \[%{DATA:platform} %{DATA:kv_pairs}\](%{DATA:message}|)"
           }
        }

        kv {
            source => "kv_pairs"
            value_split => "="
            field_split => " "
            trim_key => "\""
            trim_value => "\""
        }
   }

   mutate { add_field => { "Acknowledged" => "False" } }
   mutate { add_field => { "Action Log" => "" } }
   mutate { add_field => { "Mark Interesting" =>
    "?srcaddr=%{source-address}&srcport=%{source-port}&destaddr=%{destination-address}&destport=%{destination-port}&servicename=%{service-name}&application=%{application}&protocol_id=%{protocol-id}&username=%{username}&srczone=%{source-zone-name}&destzone=%{destination-zone-name}"
   } }
   mutate { add_field => { "Vendor" => "Juniper" } }

   fingerprint {
        source => "kv_pairs"
        target => "fingerprint.junossyslog"
        key => "junipernetworks"
        method => "SHA1"
   }

    # add grok for plain syslogs?
  } else {
    grok {
      match => {
        "message" => [
          "(?<seq_no>\d{6})?(:)?(%{DATA:timestamp}\%)%{WORD:facility}-%{DATA:severity}-%{DATA:mnemonic}\:%{GREEDYDATA:description}", # Cisco syslogs https://www.cisco.com/c/en/us/td/docs/routers/access/wireless/software/guide/SysMsgLogging.html#wp1054470
          "%{GREEDYDATA:kv_pairs}" # Fortinet syslogs https://docs.fortinet.com/document/fortigate/6.0.4/fortios-log-message-reference/357866/log-message-fields
          ]
      }
    }

    if ("" in [kv_pairs]) {
      kv {
        source => "kv_pairs"
        value_split => "="
        field_split => " "
        trim_key => "\""
        trim_value => "\""
      }
    }

  }


  # If there's a grok or dissect failure, drop it for now
  # Can redirect to output file
  if ("_dissectfailure" in [tags] or "_grokparsefailure" in [tags]) {
	  drop{}
  }
}

output {
  ### Palo Alto indices ###
  if [type] == "traffic.apps" {
		elasticsearch {
			index => "traffic.apps"
			hosts => "elasticsearch:9200"
#			Setting document ID to fingerprint will dedup
      document_id => "%{fingerprint.app}"
#			set action to CREATE if you dont want to write over existing document
#			We already dedup with the fingerprint as docid, so shouldnt need to do CREATE action
#			action - create will look if doc exists and NOT overwrite
      action => "create"
		}
	}
  if [type] == "traffic.appslist" {
		elasticsearch {
      index => "traffic.appslist"
      hosts => "elasticsearch:9200"
      document_id => "%{fingerprint.service}"
#			Do not dedup, overwrite appslist entry with new list
#     action => "create"
    }
	}
  if [type] == "traffic.userapps" {
		elasticsearch {
      index => "traffic.userapps"
      hosts => "elasticsearch:9200"
      document_id => "%{fingerprint.userapp}"
      action => "create"
    }
	}
  if [type] == "traffic.peers" {
		elasticsearch {
      index => "traffic.peers"
      hosts => "elasticsearch:9200"
#			If trying to consolidate hop info, remove two lines
      document_id => "%{fingerprint.hop}"
      action => "create"
#			Use peer fingerprint if trying to consolidate hops into single peer entry
#     document_id => "%{fingerprint.peer}"
    }
	}
  ### End Palo Alto Indices ###

  # Junos syslog index
  elasticsearch {
    hosts => "elasticsearch:9200"
    index => "junos-syslog"
    document_id => "%{fingerprint.junossyslog}"
  }

  stdout { codec => rubydebug }
}
